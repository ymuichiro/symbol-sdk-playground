"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmbeddedTransactionInfoDTOToJSON = exports.EmbeddedTransactionInfoDTOFromJSONTyped = exports.EmbeddedTransactionInfoDTOFromJSON = exports.instanceOfEmbeddedTransactionInfoDTO = void 0;
const EmbeddedTransactionInfoDTOTransaction_1 = require("./EmbeddedTransactionInfoDTOTransaction");
const EmbeddedTransactionMetaDTO_1 = require("./EmbeddedTransactionMetaDTO");
/**
 * Check if a given object implements the EmbeddedTransactionInfoDTO interface.
 */
function instanceOfEmbeddedTransactionInfoDTO(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "meta" in value;
    isInstance = isInstance && "transaction" in value;
    return isInstance;
}
exports.instanceOfEmbeddedTransactionInfoDTO = instanceOfEmbeddedTransactionInfoDTO;
function EmbeddedTransactionInfoDTOFromJSON(json) {
    return EmbeddedTransactionInfoDTOFromJSONTyped(json, false);
}
exports.EmbeddedTransactionInfoDTOFromJSON = EmbeddedTransactionInfoDTOFromJSON;
function EmbeddedTransactionInfoDTOFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        id: json["id"],
        meta: (0, EmbeddedTransactionMetaDTO_1.EmbeddedTransactionMetaDTOFromJSON)(json["meta"]),
        transaction: (0, EmbeddedTransactionInfoDTOTransaction_1.EmbeddedTransactionInfoDTOTransactionFromJSON)(json["transaction"]),
    };
}
exports.EmbeddedTransactionInfoDTOFromJSONTyped = EmbeddedTransactionInfoDTOFromJSONTyped;
function EmbeddedTransactionInfoDTOToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        id: value.id,
        meta: (0, EmbeddedTransactionMetaDTO_1.EmbeddedTransactionMetaDTOToJSON)(value.meta),
        transaction: (0, EmbeddedTransactionInfoDTOTransaction_1.EmbeddedTransactionInfoDTOTransactionToJSON)(value.transaction),
    };
}
exports.EmbeddedTransactionInfoDTOToJSON = EmbeddedTransactionInfoDTOToJSON;
