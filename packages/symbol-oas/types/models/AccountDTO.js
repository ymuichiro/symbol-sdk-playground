"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountDTOToJSON = exports.AccountDTOFromJSONTyped = exports.AccountDTOFromJSON = exports.instanceOfAccountDTO = void 0;
const AccountTypeEnum_1 = require("./AccountTypeEnum");
const ActivityBucketDTO_1 = require("./ActivityBucketDTO");
const Mosaic_1 = require("./Mosaic");
const SupplementalPublicKeysDTO_1 = require("./SupplementalPublicKeysDTO");
/**
 * Check if a given object implements the AccountDTO interface.
 */
function instanceOfAccountDTO(value) {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "address" in value;
    isInstance = isInstance && "addressHeight" in value;
    isInstance = isInstance && "publicKey" in value;
    isInstance = isInstance && "publicKeyHeight" in value;
    isInstance = isInstance && "accountType" in value;
    isInstance = isInstance && "supplementalPublicKeys" in value;
    isInstance = isInstance && "activityBuckets" in value;
    isInstance = isInstance && "mosaics" in value;
    isInstance = isInstance && "importance" in value;
    isInstance = isInstance && "importanceHeight" in value;
    return isInstance;
}
exports.instanceOfAccountDTO = instanceOfAccountDTO;
function AccountDTOFromJSON(json) {
    return AccountDTOFromJSONTyped(json, false);
}
exports.AccountDTOFromJSON = AccountDTOFromJSON;
function AccountDTOFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'version': json['version'],
        'address': json['address'],
        'addressHeight': json['addressHeight'],
        'publicKey': json['publicKey'],
        'publicKeyHeight': json['publicKeyHeight'],
        'accountType': (0, AccountTypeEnum_1.AccountTypeEnumFromJSON)(json['accountType']),
        'supplementalPublicKeys': (0, SupplementalPublicKeysDTO_1.SupplementalPublicKeysDTOFromJSON)(json['supplementalPublicKeys']),
        'activityBuckets': (json['activityBuckets'].map(ActivityBucketDTO_1.ActivityBucketDTOFromJSON)),
        'mosaics': (json['mosaics'].map(Mosaic_1.MosaicFromJSON)),
        'importance': json['importance'],
        'importanceHeight': json['importanceHeight'],
    };
}
exports.AccountDTOFromJSONTyped = AccountDTOFromJSONTyped;
function AccountDTOToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'version': value.version,
        'address': value.address,
        'addressHeight': value.addressHeight,
        'publicKey': value.publicKey,
        'publicKeyHeight': value.publicKeyHeight,
        'accountType': (0, AccountTypeEnum_1.AccountTypeEnumToJSON)(value.accountType),
        'supplementalPublicKeys': (0, SupplementalPublicKeysDTO_1.SupplementalPublicKeysDTOToJSON)(value.supplementalPublicKeys),
        'activityBuckets': (value.activityBuckets.map(ActivityBucketDTO_1.ActivityBucketDTOToJSON)),
        'mosaics': (value.mosaics.map(Mosaic_1.MosaicToJSON)),
        'importance': value.importance,
        'importanceHeight': value.importanceHeight,
    };
}
exports.AccountDTOToJSON = AccountDTOToJSON;
