"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MerkleTreeLeafDTOToJSON = exports.MerkleTreeLeafDTOFromJSONTyped = exports.MerkleTreeLeafDTOFromJSON = exports.instanceOfMerkleTreeLeafDTO = void 0;
const MerkleTreeNodeTypeEnum_1 = require("./MerkleTreeNodeTypeEnum");
/**
 * Check if a given object implements the MerkleTreeLeafDTO interface.
 */
function instanceOfMerkleTreeLeafDTO(value) {
    let isInstance = true;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "path" in value;
    isInstance = isInstance && "encodedPath" in value;
    isInstance = isInstance && "nibbleCount" in value;
    isInstance = isInstance && "value" in value;
    isInstance = isInstance && "leafHash" in value;
    return isInstance;
}
exports.instanceOfMerkleTreeLeafDTO = instanceOfMerkleTreeLeafDTO;
function MerkleTreeLeafDTOFromJSON(json) {
    return MerkleTreeLeafDTOFromJSONTyped(json, false);
}
exports.MerkleTreeLeafDTOFromJSON = MerkleTreeLeafDTOFromJSON;
function MerkleTreeLeafDTOFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        type: (0, MerkleTreeNodeTypeEnum_1.MerkleTreeNodeTypeEnumFromJSON)(json["type"]),
        path: json["path"],
        encodedPath: json["encodedPath"],
        nibbleCount: json["nibbleCount"],
        value: json["value"],
        leafHash: json["leafHash"],
    };
}
exports.MerkleTreeLeafDTOFromJSONTyped = MerkleTreeLeafDTOFromJSONTyped;
function MerkleTreeLeafDTOToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        type: (0, MerkleTreeNodeTypeEnum_1.MerkleTreeNodeTypeEnumToJSON)(value.type),
        path: value.path,
        encodedPath: value.encodedPath,
        nibbleCount: value.nibbleCount,
        value: value.value,
        leafHash: value.leafHash,
    };
}
exports.MerkleTreeLeafDTOToJSON = MerkleTreeLeafDTOToJSON;
