"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageGroupToJSON = exports.MessageGroupFromJSONTyped = exports.MessageGroupFromJSON = exports.instanceOfMessageGroup = void 0;
const BmTreeSignature_1 = require("./BmTreeSignature");
const StageEnum_1 = require("./StageEnum");
/**
 * Check if a given object implements the MessageGroup interface.
 */
function instanceOfMessageGroup(value) {
    let isInstance = true;
    isInstance = isInstance && "stage" in value;
    isInstance = isInstance && "height" in value;
    isInstance = isInstance && "hashes" in value;
    isInstance = isInstance && "signatures" in value;
    return isInstance;
}
exports.instanceOfMessageGroup = instanceOfMessageGroup;
function MessageGroupFromJSON(json) {
    return MessageGroupFromJSONTyped(json, false);
}
exports.MessageGroupFromJSON = MessageGroupFromJSON;
function MessageGroupFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        stage: (0, StageEnum_1.StageEnumFromJSON)(json["stage"]),
        height: json["height"],
        hashes: json["hashes"],
        signatures: json["signatures"].map(BmTreeSignature_1.BmTreeSignatureFromJSON),
    };
}
exports.MessageGroupFromJSONTyped = MessageGroupFromJSONTyped;
function MessageGroupToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        stage: (0, StageEnum_1.StageEnumToJSON)(value.stage),
        height: value.height,
        hashes: value.hashes,
        signatures: value.signatures.map(BmTreeSignature_1.BmTreeSignatureToJSON),
    };
}
exports.MessageGroupToJSON = MessageGroupToJSON;
