"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Catapult REST Endpoints
 * OpenAPI Specification of catapult-rest
 *
 * The version of the OpenAPI document: 1.0.3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmbeddedMosaicSupplyChangeTransactionDTOToJSON = exports.EmbeddedMosaicSupplyChangeTransactionDTOFromJSONTyped = exports.EmbeddedMosaicSupplyChangeTransactionDTOFromJSON = exports.instanceOfEmbeddedMosaicSupplyChangeTransactionDTO = void 0;
const MosaicSupplyChangeActionEnum_1 = require("./MosaicSupplyChangeActionEnum");
const NetworkTypeEnum_1 = require("./NetworkTypeEnum");
/**
 * Check if a given object implements the EmbeddedMosaicSupplyChangeTransactionDTO interface.
 */
function instanceOfEmbeddedMosaicSupplyChangeTransactionDTO(value) {
    let isInstance = true;
    isInstance = isInstance && "signerPublicKey" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "network" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "mosaicId" in value;
    isInstance = isInstance && "delta" in value;
    isInstance = isInstance && "action" in value;
    return isInstance;
}
exports.instanceOfEmbeddedMosaicSupplyChangeTransactionDTO = instanceOfEmbeddedMosaicSupplyChangeTransactionDTO;
function EmbeddedMosaicSupplyChangeTransactionDTOFromJSON(json) {
    return EmbeddedMosaicSupplyChangeTransactionDTOFromJSONTyped(json, false);
}
exports.EmbeddedMosaicSupplyChangeTransactionDTOFromJSON = EmbeddedMosaicSupplyChangeTransactionDTOFromJSON;
function EmbeddedMosaicSupplyChangeTransactionDTOFromJSONTyped(json, ignoreDiscriminator) {
    if (json === undefined || json === null) {
        return json;
    }
    return {
        signerPublicKey: json["signerPublicKey"],
        version: json["version"],
        network: (0, NetworkTypeEnum_1.NetworkTypeEnumFromJSON)(json["network"]),
        type: json["type"],
        mosaicId: json["mosaicId"],
        delta: json["delta"],
        action: (0, MosaicSupplyChangeActionEnum_1.MosaicSupplyChangeActionEnumFromJSON)(json["action"]),
    };
}
exports.EmbeddedMosaicSupplyChangeTransactionDTOFromJSONTyped = EmbeddedMosaicSupplyChangeTransactionDTOFromJSONTyped;
function EmbeddedMosaicSupplyChangeTransactionDTOToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        signerPublicKey: value.signerPublicKey,
        version: value.version,
        network: (0, NetworkTypeEnum_1.NetworkTypeEnumToJSON)(value.network),
        type: value.type,
        mosaicId: value.mosaicId,
        delta: value.delta,
        action: (0, MosaicSupplyChangeActionEnum_1.MosaicSupplyChangeActionEnumToJSON)(value.action),
    };
}
exports.EmbeddedMosaicSupplyChangeTransactionDTOToJSON = EmbeddedMosaicSupplyChangeTransactionDTOToJSON;
